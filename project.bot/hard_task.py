hard = {
    1:
        'Задача: Найти наибольшую возрастающую подпоследовательность в заданном списке чисел.'
        'Пример: Входной список - [3, 10, 2, 1, 20], Наибольшая возрастающая подпоследовательность - [3, 10, 20]',
    2:
        'Задача: Найти все уникальные подстроки в заданной строке.'
        'Пример: Входная строка - "ababc", Уникальные подстроки - ["a", "b", "ab", "ba", "c"]',
    3:
        'Задача: Реализовать алгоритм сортировки слиянием (Merge Sort).'
        'Пример: Входной список - [5, 2, 7, 1, 9], Отсортированный список - [1, 2, 5, 7, 9]',
    4:
        'Задача: Реализовать алгоритм быстрой сортировки (Quick Sort).'
        'Пример: Входной список - [5, 2, 7, 1, 9], Отсортированный список - [1, 2, 5, 7, 9]',
    5:
        'Задача: Найти максимальную подматрицу с нулевой суммой в заданной матрице.'
        'Пример: Входная матрица - [[9, 7, 16], [1, -6, -7], [-1, 8, 10]], Максимальная подматрица - [[9, 7], [1, -6]]',
    6:
        'Задача: Найти наименьший общий кратный (НОК) двух чисел.'
        'Пример: Входные числа - 12 и 18, НОК - 36',
    7:  
        'Задача: Проверить, является ли заданная строка палиндромом, игнорируя пробелы и знаки препинания.'
        'Пример: Входная строка - "A man, a plan, a canal, Panama!", Результат - True',
    8:
        'Задача: Проверить, является ли заданное число числом Фибоначчи.'
        'Пример: Входное число - 13, Результат - True',
    9:
        'Задача: Перевести заданное число из десятичной системы счисления в двоичную.'
        'Пример: Входное число - 42, Результат - "101010"',
    10:
        'Задача: Реализовать алгоритм обхода графа в глубину (Depth-First Search).'
        'Пример: Входной граф - {A: [B, C], B: [D, E], C: [F]}, Результат обхода - [A, B, D, E, C, F]',
}